-------------------- 17 TCP:Transmission Control Protocol-------------------- 

TCP provides a connection-riented reliable byte-stream service
	<---------------------IP datagram--------------------->
			<-------------TCP segment------------->
       	ip header	TCP header	TCP data
	20 bytes	20 bytes

The connection-oriented means the two apllicaton using TCP must establish a TCP connection
with each other before they can exchange data.

broadcasting and multicasting aren't applicable to TCP
The combination of an IP address and a port number is sometimes called a socket.
pseudo-header 伪首部
The most common option is the maximum segment size.
electronic mail(SMPT) 电子邮件
TCP header

0				15				31
	16-bit source port		16-bit destination port
		32-bit sequnce number
		32-bit acknowledgment number
4-bit header length | 6-bit reserved URG ACK PSH RST SYN FIN 16-bit window size
16-bit TCP chesum			16-bit urgent pointer

URG The urgent pointer is valid
ACK The acknowledgment is valid
PSH The receiver should pass this data to application as soon as possible
RST Reset the connection
SYN Synchronize sequence numbers to initiate a connection.
FIN The sender is finished sending data.

The checksum covers the segment:the TCP header and TCP data.

--------------------18 Connection Establishment adn Termination--------------------  

three-way handshake 三次握手
ISN inital sequence number
if the destination IP address is "nonlocal",the MMS noemally defaults to 536.
MSS maximum segment size
Discard Servicer:The remote host is running a 'discard' service. This service; typically sets up a listening socket and will ignore all the data which it receives.;; This service is unused these days, so it is advised that you disable it.

--------------------20 TCP的成块数据流-------------------- 
   TCP使用被称为滑动窗口协议的一种流量控制方法。该协议允许发送方在停止并等待确认前可以连续发送多个分组
   有接收方提供的窗口的大小通常可以由接收进程控制，这将影响TCP的性能。
   对以太网而言，默认的4096字节并不是最理想的大小，将两个缓存增加到16384个字节可以增加约49%的吞吐量。
   慢启动为发送方增加了另一个窗口：拥塞窗口（congestion window）,记为cwnd。初始大小为一个报文段
   拥塞窗口是发送方使用的流量控制，而通告窗口这是接收方使用的流量控制。
--------------------21 TCP的超时和重传-------------------- 
   TCP提供可靠的运输层。它使用的方法之一就是确认从另一端收到数据。但数据和确认都可能丢失。TCP通通过在发送时设置一个定时器来解决这种问题。如果当定时器溢出时还没有收到确认，他就重传该数据。对任何实现而言，关键之处就在于超时和重传的策略，即怎样决定超时间隔和如何确定重传的频率。
   对每一个连接，TCP管理4个不同的定时器。
   1.重传定时器是用于当希望收到另一端的确认。
   2.坚持(persist)定时器使窗口大小信息保持不断流动，即使另一端关闭了其接收窗口。
   3.保活(keeplive)定时器可检测到一个空闲连接的另一端何时崩溃或重启。
   4.2MSL定时器测量一个连接处于TIME_WAIT状态的时间
--------------------21超时与重传-------------------- 




